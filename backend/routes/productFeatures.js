const express = require('express');
const router = express.Router();
const { sql, poolPromise } = require('../config/db');

router.get('/:productName/features', async (req, res) => {
  const { productName } = req.params;
  try {
    const pool = await poolPromise;
    const result = await pool.request()
      .input("ProductName", sql.NVarChar(100), productName)
      .query(`SELECT KeyFeatures FROM Products WHERE ProductName = @ProductName`);

    const raw = result.recordset[0]?.KeyFeatures || "";

    // üîÅ –°–ø–ª–∏—Ç–≤–∞–º–µ –ø–æ "\n", –º–∞—Ö–∞–º–µ —Ç–∏—Ä–µ—Ç–∞/—Ç–æ—á–∫–∏ –æ—Ç–ø—Ä–µ–¥ –∏ –ø—Ä–∞–∑–Ω–∏ —Ä–µ–¥–æ–≤–µ
    const features = raw
      .split('\\n') // –≤–∞–∂–Ω–æ: –¥–≤–µ –Ω–∞–∫–ª–æ–Ω–µ–Ω–∏ —á–µ—Ä—Ç–∏, –∑–∞—â–æ—Ç–æ –∏–¥–≤–∞ –æ—Ç SQL escape
      .map(f => f.replace(/^[-‚Ä¢]\s*/, '').trim())
      .filter(f => f.length > 0);

    res.json(features);
  } catch (err) {
    console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–∑–∏–º–∞–Ω–µ –Ω–∞ features:", err);
    res.status(500).json({ message: "–°—ä—Ä–≤—ä—Ä–Ω–∞ –≥—Ä–µ—à–∫–∞" });
  }
});

module.exports = router;
