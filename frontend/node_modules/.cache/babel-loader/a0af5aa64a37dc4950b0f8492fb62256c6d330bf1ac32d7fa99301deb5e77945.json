{"ast":null,"code":"import{createContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isLoggedIn,setIsLoggedIn]=useState(!!localStorage.getItem(\"token\"));const[isAdmin,setIsAdmin]=useState(localStorage.getItem(\"isAdmin\")===\"true\");const login=(token,adminFlag)=>{localStorage.setItem(\"token\",token);localStorage.setItem(\"isAdmin\",adminFlag);setIsLoggedIn(true);setIsAdmin(adminFlag);};const logout=()=>{localStorage.removeItem(\"token\");localStorage.removeItem(\"isAdmin\");setIsLoggedIn(false);setIsAdmin(false);};useEffect(()=>{setIsLoggedIn(!!localStorage.getItem(\"token\"));setIsAdmin(localStorage.getItem(\"isAdmin\")===\"true\");},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn,isAdmin,login,logout},children:children});};","map":{"version":3,"names":["createContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isLoggedIn","setIsLoggedIn","localStorage","getItem","isAdmin","setIsAdmin","login","token","adminFlag","setItem","logout","removeItem","Provider","value"],"sources":["E:/Diplomna/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"token\"));\r\n  const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\r\n\r\n  const login = (token, adminFlag) => {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"isAdmin\", adminFlag);\r\n    setIsLoggedIn(true);\r\n    setIsAdmin(adminFlag);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"isAdmin\");\r\n    setIsLoggedIn(false);\r\n    setIsAdmin(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoggedIn(!!localStorage.getItem(\"token\"));\r\n    setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, isAdmin, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3D,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAC7E,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,GAAK,MAAM,CAAC,CAElF,KAAM,CAAAG,KAAK,CAAGA,CAACC,KAAK,CAAEC,SAAS,GAAK,CAClCN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAEF,KAAK,CAAC,CACpCL,YAAY,CAACO,OAAO,CAAC,SAAS,CAAED,SAAS,CAAC,CAC1CP,aAAa,CAAC,IAAI,CAAC,CACnBI,UAAU,CAACG,SAAS,CAAC,CACvB,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACnBR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAChCT,YAAY,CAACS,UAAU,CAAC,SAAS,CAAC,CAClCV,aAAa,CAAC,KAAK,CAAC,CACpBI,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAEDZ,SAAS,CAAC,IAAM,CACdQ,aAAa,CAAC,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAC9CE,UAAU,CAACH,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,GAAK,MAAM,CAAC,CACxD,CAAC,CAAE,EAAE,CAAC,CAEN,mBACER,IAAA,CAACC,WAAW,CAACgB,QAAQ,EAACC,KAAK,CAAE,CAAEb,UAAU,CAAEI,OAAO,CAAEE,KAAK,CAAEI,MAAO,CAAE,CAAAX,QAAA,CACjEA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}