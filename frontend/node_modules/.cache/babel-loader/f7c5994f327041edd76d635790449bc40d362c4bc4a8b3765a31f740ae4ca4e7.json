{"ast":null,"code":"var _jsxFileName = \"E:\\\\Diplomna\\\\frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://localhost:5000/api/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          fullName,\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert(data.message || \"Регистрацията беше успешна!\");\n        window.location.href = \"/\";\n      } else {\n        alert(data.message || \"Възникна грешка при регистрацията.\");\n      }\n    } catch (err) {\n      alert(\"Сървърна грешка.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0418\\u043C\\u0435\",\n        value: fullName,\n        onChange: e => setFullName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"\\u0418\\u043C\\u0435\\u0439\\u043B\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u0430\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: \"\\u0412\\u0435\\u0447\\u0435 \\u0438\\u043C\\u0430\\u0442\\u0435 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0412\\u043B\\u0435\\u0437\\u0442\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"tS0+XqeXddlCkOSXAtLuGmStkQU=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","fullName","setFullName","email","setEmail","password","setPassword","handleRegister","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","message","window","location","href","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["E:/Diplomna/frontend/src/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Register() {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ fullName, email, password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        alert(data.message || \"Регистрацията беше успешна!\");\r\n        window.location.href = \"/\";\r\n      } else {\r\n        alert(data.message || \"Възникна грешка при регистрацията.\");\r\n      }\r\n    } catch (err) {\r\n      alert(\"Сървърна грешка.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Регистрация</h2>\r\n      <form onSubmit={handleRegister}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Име\"\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Имейл\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Парола\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Регистрация</button>\r\n      </form>\r\n      <a href=\"/\">Вече имате акаунт? Влезте</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}